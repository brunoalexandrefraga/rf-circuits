---
title: Componentes Passivos em RF 
subtitle: Laboratório 07
author:
  - name: Bruno Alexandre Fraga
    email: bruno.fraga@posgrad.ufsc.br
    affiliations: 
        - id: some-tech
          name: Universidade Federal de Santa Catarina
          department: Departamento de Engenharia Elétrica e Eletrônica
          address: R. Delfino Conti
          city: Florianópolis
          state: Santa Catarina
          postal-code: 88040-370
abstract: |
  Este trabalho tem por objetivo consolidar a técnica de projeto de redes de casamento de impedância, em especial a técnica pela rede L. Para isso, é proposto realizar o casamento de impedância da saída de um amplificador para uma carga de 50 $\Omega$ de modo que a eficiência da potência dissipada na carga seja de 80%. Após algumas análises o projeto foi concluído com sucesso e realizada uma simulação Monte Carlo com 100 iterações para verificar a robustez do projeto por técnicas estatísticas. Os resultados obtidos foram brevemente discutidos.
keywords: 
  - Robustez
  - Adaptação de impedância
  - Análise estatística
date: last-modified
bibliography: bibliography.bib
format:
  elsevier-pdf:
    include-in-header:
      - text: |
          \usepackage{steinmetz}
          \usepackage[a4paper, margin=1in]{geometry}
          \usepackage{graphicx} % Required for inserting images
          \usepackage{circuitikz}
          \usepackage{amsmath}
          \usepackage{amssymb}
          \usepackage{amsthm}

          \newcommand{\parallelsum}{\mathbin{\!/\mkern-5mu/\!}}
    keep-tex: true
    journal:
      name: RF Circuits
      formatting: preprint
      # model: 3p # Don't set a model with preprint
      cite-style: number
---

# Circuito com Diodo

## Revisão

Este trabalho inicia-se medindo o ponto de interceptação de terceira-orcem (IP3) do circuito com diodo.

```{=latex}
\begin{figure}[h]
  \centering
  \begin{circuitikz}[american]
    \draw (0.5, -4.5) node[ground]{} to[sV, l=$v_{s1}$] ++(0, 2) to[sV, l=$v_{s2}$] ++(0, 2) to[C, l=$C$] ++(3, 0) coordinate(point1) to[L, l=$L$] ++(0, -2) coordinate(point2) ;
    \draw (3.5, -4.5) node[ground]{} to[isource, l=$I_b$] (point2) ;
    \draw (6, -4.5) coordinate(point3) node[ground]{} ;
    \draw (point1) to[short, -*] ++(2.5, 0) to[empty diode, a=$V_D$, i>^=$I_D$, *-] (point3) ;
  \end{circuitikz}
  \caption{Circuito com o diodo}
  \label{fig:circuit-diode-original}
\end{figure}
```

Para calcularmos tal parâmetro, antes de mais nada será realizada aproximação do diodo pelo seu modelo de pequenos sinais. Já é de conhecimento que o modelo de pequenos sinais de um diodo é a simplificação deste elementor por um resistor de resistência $r_d$, de tal forma que

$$
  r_D^{-1}=y_D=\frac{dI_D}{dV_D}
$$ {#eq-rd-differential}

Em que

$$
  I_D\approx I_se^{V_D/V_T}
$$ {#eq-diode-current}

assumindo $n=1$ (parâmetro dependente da estrutura física do componente) @sedra2014microelectronic. Além disso,

$$
  V_T=\frac{kT}{q}
$$

realizando a derivada da equação @eq-rd-differential e invertendo a equação obtida, resulta em

$$
  r_D=\frac{V_t}{I_D}
$$

```{python}
#| echo: false
import math
Is=1e-15
ID=Ib=25e-3
T0=273.15
T=26.85
Deltaf=100 #Hz
f1=1e3 #Hz
Rs=50
f2=f1+Deltaf #Hz
Pi1=Pi2=10e-9 #W
Pi=Pi1+Pi2
Vi1=math.sqrt(8*Pi1*Rs)
Vi2=math.sqrt(8*Pi2*Rs)
Vi=Vi1+Vi2
```

```{python}
#| echo: false
from scipy.constants import Boltzmann as k, elementary_charge as q

T_celsius = 26.85
T_kelvin = T_celsius + T0
VT = k * T_kelvin / q
rD=VT/ID
yD = 1/rD

ID1=Vi1/rD
```

```{python}
#| echo: false
def format(value):
    if value >= 1e9:
        return f"{value / 1e9:.2f} G"
    elif value >= 1e6:
        return f"{value / 1e6:.2f} M"
    elif value >= 1e3:
        return f"{value / 1e3:.2f} k"
    elif value >= 1:
        return f"{value:.2f} "
    elif value >= 1e-3:
        return f"{value * 1e3:.2f} m"
    elif value >= 1e-6:
        return f"{value * 1e6:.2f} μ"
    elif value >= 1e-9:
        return f"{value * 1e9:.2f} n"
    elif value >= 1e-12:
        return f"{value * 1e12:.2f} p"
    elif value >= 1e-15:
        return f"{value * 1e12:.2f} p"
    else:
        return f"{value:.0e} "
```

```{python}
#| echo: false
def format_e_notation(value, decimals=2):
    format_string = f"{{:.{decimals}f}}"
    if value >= 1e9:
        return f"{format_string.format(value / 1e9)}e9"
    elif value >= 1e6:
        return f"{format_string.format(value / 1e6)}e6"
    elif value >= 1e3:
        return f"{format_string.format(value / 1e3)}e3"
    elif value >= 1:
        return f"{format_string.format(value)}"
    elif value >= 1e-3:
        return f"{format_string.format(value * 1e3)}e-3"
    elif value >= 1e-6:
        return f"{format_string.format(value * 1e6)}e-6"
    elif value >= 1e-9:
        return f"{format_string.format(value * 1e9)}e-9"
    elif value >= 1e-12:
        return f"{format_string.format(value * 1e12)}e-12"
    elif value >= 1e-15:
        return f"{format_string.format(value * 1e15)}e-15"
    else:
        return f"{value:.{decimals}}"
```

```{python}
#| echo: false
def format_simple(value, decimals=2):
    format_string = f"{{:.{decimals}f}}"
    return f"{format_string.format(value)}"
```

Dessa forma, aplicam-se os valores nas equações, resultando em uma resistência $r_d=$ `{python} format(rD)`$\Omega$. Com base nesse modelo de pequenos sinais, aplicam-se dois tons espaçados de $\Delta_f=$ `{python} format(Deltaf)`Hz, sendo que a primeira frequência selecionada é $f_1=$ `{python} format(f1)`Hz e, consequentemente, o segundo $f_2=$ `{python} format(f2)`Hz. Ambos os tons utilizados nessa seção são de $P_{i1}=P_{i2}=$ `{python} format(Pi1)`W, resultando em tensão igual a $V_i=$ `{python} format(Vi1)`V para a fonte de frequência $f_1$ (pensando em uma fonte de impedância de `{python} format(Rs)`$\Omega$). Assim, a corrente sobre o diodo, na frequência $f_1$, é igual à $V_{s1}/r_d=$ `{python} format(ID1)`A. Esses valores podem ser verificados pela simulação apresentada na [Fig. @fig-diode-validation].

![Validação do circuito com Diodo](../figures/original-circuit-diode-validation.png){width=300, #fig-diode-validation}

## Cálculo teórico

Dado o circuito apresentado na Fig.\ref{fig:circuit-diode-original}, se for realizada a expansão de Taylor para o diodo, chega-se a

$$
  I_D^{'}=a_1V_D+a_2V_D^2+a_3V_D^3
$$ {#eq-taylor-expansion}

em que, $I_D$ é dado pela [Eq. @eq-diode-current]

$$
\begin{split}
  a_1&=\frac{dI_D}{dV_D}\bigg|_{V_D=0}\implies\\
  &=\frac{I_D(0)}{V_T}\implies\\
  &=\frac{1}{V_T}I_se^{0/V_T}\implies\\
  &=\frac{I_s}{V_T}
\end{split}
$$ {#eq-def-a1}

continuando,

$$
\begin{split}
  2a_2&=\frac{d^2I_D}{dV_D^2}\bigg|_{V_D=0}\implies\\
  &=\frac{I_s}{V_T^2}
\end{split}
$$

e, finalmente,

$$
\begin{split}
  6a_3&=\frac{d^3I_D}{dV_D^3}\bigg|_{V_D=0}\implies\\
  &=\frac{I_s}{V_T^3}
\end{split}
$$ {#eq-def-a3}

Além disso, pode-se especificar o valor de $V_D$. Para calcular o ponto de interceptação de terceira ordem dos harmônicos, $V_D=V_1\cos\left(\omega_1t\right)$, em que $\omega_1=2\pi f_1$. Aplicando esse sinal à equação [Eq. @eq-taylor-expansion],

$$
  I_D^{'}=a_1V_1\cos\left(\omega_1t\right)+a_2V_1^2\cos^2\left(\omega_1t\right)+a_3V_1^3\cos^3\left(\omega_1t\right)
$$

Resultando em

$$
\begin{aligned}
  I_D^{'}&=\frac{1}{2}a_2V_i^2+\left(a_1V_i+\frac{3}{4}a_3V_i^3\right)\cos(\omega_1t)\\
       &+\frac{1}{2}a_2V_i^2\cos(2\omega_1t)+\frac{1}{4}a_3V_i^3\cos(3\omega_1t)
\end{aligned}
$$

O ponto de interceptação harmônico de terceira ordem, $\text{IP}_{3h}$, ocorre quando a amplitude da frequência fundamental e a amplitude do harmônico de terceira ordem são iguais, ou seja

$$
\begin{split}
  \left|a_1V_i\right|&=\left|\frac{1}{4}a_3V_i^3\right|\implies\\
  \text{IP}_{3h}&=V_i=2\sqrt{\left|\frac{a_1}{a_3}\right|}
\end{split}
$$

Semelhante ao que foi obtido para os produtos harmônicos, pode-se realizar para os produtos de intermodulação, nesse caso, com o teste de dois tons $V_D=V_i\left[\cos\left(\omega_1t\right)+\cos\left(\omega_2t\right)\right]$ (tons de mesma amplitude). Aplicando à [Eq. @eq-taylor-expansion], obtém-se

$$
\begin{aligned}
  I_D^{'}&=a_1V_i\left[\cos\left(\omega_1t\right)+\cos\left(\omega_2t\right)\right]\\
  &+a_2V_i^2\left[\cos\left(\omega_1t\right)+\cos\left(\omega_2t\right)\right]^2\\
  &+a_3V_i^3\left[\cos\left(\omega_1t\right)+\cos\left(\omega_2t\right)\right]^3
\end{aligned}
$$

Resultando em

$$
\begin{aligned}
    I_D^{'}=&a_1V_i\cos(\omega_1t)+a_1V_i\cos(\omega_2t)\\
    &+\frac{1}{2} a_2 V_i^2 \big[1 + \cos(2 \omega_1 t)\big] + \frac{1}{2} a_2 V_i^2 \big[1 + \cos(2 \omega_2 t)\big]\\
    &+a_2V_i^2\cos(\omega_1-\omega_2)t+a_2V_i^2\cos(\omega_1+\omega_2)t\\
    &+a_3V_i^3\left[\frac{3}{4}\cos(\omega_1t) + \frac{1}{4} \cos(3 \omega_1 t)\right] \\
    &+a_3V_i^3\left[\frac{3}{4}\cos(\omega_2t) + \frac{1}{4} \cos(3 \omega_2 t)\right] \\
    &+a_3V_i^3\left[\frac{3}{2}\cos(3\omega_1t) + \frac{3}{4} \cos(2 \omega_2 - \omega_1)t 
    +\frac{3}{4} \cos(2 \omega_2 + \omega_1)t\right] \\
    &+ a_3 V_i^3 \left[\frac{3}{2} \cos(3 \omega_2 t) + \frac{3}{4} \cos(2 \omega_1 - \omega_2)t 
    + \frac{3}{4} \cos(2 \omega_1 + \omega_2)t\right].
\end{aligned}
$$

Assim, é possível calcular o ponto de interceptação de terceira ordem para intermodulação, $\text{IP}_{3i}$, igualando as amplitudes da fundamental e da intermodulação de terceira ordem, como é apresentado a seguir

$$
\begin{split}
  \left|a_1V_i\right|&=\left|\frac{3}{4}a_3V_i^3\right|\implies\\
  \text{IP}_{3i}&=V_i=2\sqrt{\frac{\left|a_1\right|}{3\left|a_3\right|}}\implies\\
  &=\frac{\text{IP}_{3h}}{\sqrt{3}}\\
\end{split}
$$

```{python}
#| echo: false
import math

a1_diode_0 = Is/VT 
a2_diode_0 = Is/VT**2/2 
a3_diode_0 = Is/VT**3/6
IIP3h_diode = 2*math.sqrt(abs(a1_diode_0)/abs(a3_diode_0))
OIP3h_diode = IIP3h_diode*yD
IIP3i_diode = IIP3h_diode/math.sqrt(3)
OIP3i_diode = IIP3i_diode*yD
```

Dadas a [Eq. @eq-def-a1] e a [Eq. @eq-def-a3], pode-se quantificar os pontos de interceptação de terceira ordem (harmônico e intermodulação). Dessa forma, $\text{IIP}_{3h}=$ `{python} format_simple(IIP3h_diode, 4)` V, $\text{OIP}_{3h}=$ `{python} format_simple(OIP3h_diode, 4)` A, $\text{IIP}_{3i}=$ `{python} format_simple(IIP3i_diode, 4)` V e $\text{OIP}_{3i}=$ `{python} format_simple(OIP3i_diode, 4)` A. Assim, a [Fig. @fig-graph-intersec-diode] apresenta a extrapolação das curvas de corrente das frequências fundamental, dada por

$$
  I_{o1}=\frac{I_D}{V_T}V_i=y_DV_i
$$

e a corrente da frequência de terceira ordem é obtida pela seguinte equação

$$
  I_{o3}=\frac{y_D}{6V_T^2}V_i
$$


::: {#fig-graph-intersec-diode}
```{python}
#| echo: false
import numpy as np
import matplotlib.pyplot as plt

# Intervalo de Vi
Vi = np.logspace(np.log10(700e-6), np.log10(2), 10000)

a1_diode = yD
a3_diode = yD/(6*VT**2)

# Cálculo de Io
Io1 = a1_diode * Vi
Io3 = 3/4 * a3_diode * Vi**3

# Determinando o ponto de interceptação
idx_intercept = np.argmin(np.abs(Io1 - Io3))  # Índice do ponto mais próximo
Vi_IP3 = Vi[idx_intercept]  # Valor de Vi no ponto de interceptação
I_IP3 = Io3[idx_intercept]  # Valor de Io no ponto de interceptação

# Plot log-log
plt.figure(figsize=(8, 6))
plt.loglog(Vi, Io1, linestyle="-", color="blue", label=r"$I_{o1}$")
plt.loglog(Vi, Io3, linestyle="-", color="green", label=r"$I_{o3}$")
plt.axhline(I_IP3, color="red", linestyle=":", label=f"$OIP3 = {I_IP3:.5e}$ A")
plt.axvline(Vi_IP3, color="purple", linestyle=":", label=f"$IIP3 = {Vi_IP3:.5e}$ V")
plt.xlabel(r"$V_i$", fontsize=12)
plt.ylabel(r"$I_o$", fontsize=12)
plt.title(r"Gráfico $IP_{3i}$", fontsize=14)
plt.grid(which="both", linestyle="--", linewidth=0.5)
plt.legend(fontsize=10)
plt.tight_layout()
plt.show()
```
:::

Pode-se perceber que os mesmos resultados são obtidos na intersecção das curvas apresentadas.

## Validação por simulação

Para que seja possível calcular o IP3 de um circuito, dois testes são realizados. O primeiro teste trata-se da obtenção da curva de compressão de ganho com apenas 1 tom e o segundo teste é a obtenção da mesma curva com dois tons. Para o circuito analisado anteriormente, verifica-se a curva apresentada na [Fig. @fig-diode-IP3].

![Gráfico de IP3 para o Diodo](../figures/IP3-diode-meas.png){width=300, #fig-diode-IP3}

A curva em azul representa a compressão de ganho devido aos harmônicos produzidos pelo componente não linear (neste caso, o diodo) com a aplicação de apenas um tom. A curva em vermelho é o comportamento esperado para o produto de intermodulação resultante dos dois tons, em que $f_3=2f_1-f_2$. Percebe-se que a inclinação das curvas é diferente e a curva do IM3 é bem mais acentuada que a outra. Assim, sabe-se que as duas curvas, se forem prolongadas na parte linear (inicial), cruzam-se em um ponto, esse ponto é o IP3 (IIP3, OIP3). Para o cálculo desse ponto, sabe-se que

$$
  \begin{split}
    \text{OIP3}-P_3&=\frac{3}{2}\left(P_1-P_3\right)\implies\\
    \text{OIP3}&=\frac{3}{2}P_1-\frac{1}{2}P_3
  \end{split}
$$

Além disso, sabe-se que $\text{IIP3}=\text{OIP3}-G$ em que $G$ é o ganho do amplificador. Aplicando tais equações à mesma configuração que está sendo analisada, obtém-se os resultados apresentados na [Fig. @fig-results-IP3-diode].

![Resultados IP3 para o diodo](../figures/Results-IP3-diode.png){width=300, #fig-results-IP3-diode}

Por meio da simulação, também é possível visualizar os mesmos resultados dos cálculos e do gráfico anteriormente apresentados.


































```{python}
#| echo: false
import numpy as np
import matplotlib.pyplot as plt

# Parâmetros
gm = Is/VT
a1 = gm
a3 = gm / VT

# Intervalo de Vi
Vi = np.logspace(np.log10(700e-6), np.log10(2), 500)

# Cálculo de Io
Io1 = a1 * Vi
Io3 = 3/4 * a3 * Vi**3

# Plot log-log
plt.figure(figsize=(8, 6))
plt.loglog(Vi, Io1, linestyle="--", color="blue")
plt.loglog(Vi, Io3, linestyle="-", color="green")
plt.xlabel(r"$V_i$ (V)", fontsize=12)
plt.ylabel(r"$I_o$ (A)", fontsize=12)
plt.title("Gráfico log-log de $I_{o1}$ e $I_{o3}$ vs $V_i$", fontsize=14)
plt.grid(which="both", linestyle="--", linewidth=0.5)
plt.tight_layout()
plt.show()
```






























# Cálculo do IP3 para circuito com BJT

Em seguida, é realizada a medição do IP3 do transistor BJT (npn) ideal. O circuito de medição pode ser visualizado na Fig.\ref{fig:circuit-bjt-original}.

```{=latex}
\begin{figure}[h]
  \centering
  \begin{circuitikz}[american]
    \draw (1.98, -0.5) node[npn](nmos1){};
    \draw (nmos1.C) to[short] ++(0, 0.23) to[short, i^<=$I_C$] ++(3.52, 0) to[battery1, l=$V_{cc}$] ++(0, -4) node[ground]{} ;
    \draw (nmos1.E) to[isource, l=$I_{ee}$] (2, -3.5) node[ground]{} ;
    \draw (-0.5, -3.5) node[ground]{} to[sV, l=$V_{s2}$] ++(0, 1.5) to[sV, l=$V_{s1}$] ++(0, 1.5) to[battery1, l=$V_B$, invert] (nmos1.B) ;
    \draw (2, -1.5) to[short] ++(2, 0) to[C, l=$C$] ++(0, -2) node[ground]{} ;
  \end{circuitikz}
  \caption{Circuito com o BJT}
  \label{fig:circuit-bjt-original}
\end{figure}
```




























# References {-}
