---
title: Componentes Passivos em RF 
subtitle: Laboratório 07
author:
  - name: Bruno Alexandre Fraga
    email: bruno.fraga@posgrad.ufsc.br
    affiliations: 
        - id: some-tech
          name: Universidade Federal de Santa Catarina
          department: Departamento de Engenharia Elétrica e Eletrônica
          address: R. Delfino Conti
          city: Florianópolis
          state: Santa Catarina
          postal-code: 88040-370
abstract: |
  Este trabalho tem por objetivo consolidar a técnica de projeto de redes de casamento de impedância, em especial a técnica pela rede L. Para isso, é proposto realizar o casamento de impedância da saída de um amplificador para uma carga de 50 $\Omega$ de modo que a eficiência da potência dissipada na carga seja de 80%. Após algumas análises o projeto foi concluído com sucesso e realizada uma simulação Monte Carlo com 100 iterações para verificar a robustez do projeto por técnicas estatísticas. Os resultados obtidos foram brevemente discutidos.
keywords: 
  - Robustez
  - Adaptação de impedância
  - Análise estatística
date: last-modified
bibliography: bibliography.bib
format:
  elsevier-pdf:
    include-in-header:
      - text: |
          \usepackage{steinmetz}
          \usepackage[a4paper, margin=1in]{geometry}
          \usepackage{graphicx} % Required for inserting images
          \usepackage{circuitikz}
          \usepackage{amsmath}
          \usepackage{amssymb}
          \usepackage{amsthm}
          \usepackage{comment}

          \newcommand{\parallelsum}{\mathbin{\!/\mkern-5mu/\!}}
    keep-tex: true
    journal:
      name: RF Circuits
      formatting: preprint
      # model: 3p # Don't set a model with preprint
      cite-style: number
---

# Notações


Para ilustrar a convenção, assume-se uma corrente $i_C(t)$ que flui por um ramo em um circuito particular. Essa corrente consiste em um componente de corrente contínua (dc) $I_C$, sobre o qual está sobreposta um componente senoidal $i_c(t)$, cuja **amplitude de pico** é $I_c$. Observe que, em um instante $t$, a corrente instantânea total $i_C(t)$ é a soma da corrente contínua $I_C$ e da corrente do sinal $i_c(t)$,
$$
i_C(t) = I_C + i_c(t)
$$

onde a corrente do sinal é dada por

$$
i_c(t) = I_c \sin\left(\omega t\right)
$$

# Introdução

```{python}
#| echo: false
def format_simple(value, decimals=2):
    format_string = f"{{:.{decimals}f}}"
    return f"{format_string.format(value)}"
```

```{python}
#| echo: false
def format(value):
    if value >= 1e9:
        return f"{value / 1e9:.2f} G"
    elif value >= 1e6:
        return f"{value / 1e6:.2f} M"
    elif value >= 1e3:
        return f"{value / 1e3:.2f} k"
    elif value >= 1:
        return f"{value:.2f} "
    elif value >= 1e-3:
        return f"{value * 1e3:.2f} m"
    elif value >= 1e-6:
        return f"{value * 1e6:.2f} μ"
    elif value >= 1e-9:
        return f"{value * 1e9:.2f} n"
    elif value >= 1e-12:
        return f"{value * 1e12:.2f} p"
    elif value >= 1e-15:
        return f"{value * 1e12:.2f} p"
    else:
        return f"{value:.0e} "
```

```{python}
#| echo: false

import math

emitter_efficiency = 60 #%
Pi_dBm = 5
Po_dBm = 25
Pi = 10**(Pi_dBm/10)*1e-3
Po = 10**(Po_dBm/10)*1e-3
freq = 400e6 #Hz
z_source_real = 50 #Ohms
z_source_imag = 0 
z_load_real = 50 #Ohms
z_load_imag = 0
VL = math.sqrt(2*Po*z_source_real)
IL = 2*Po/VL
``` 

A intenção deste trabalho é apresentar o projeto de um amplificador de potência que opere na frequência $f=$ `{python} format(freq)`Hz, com uma eficiência de emissor (dreno) de $\eta=$ `{python} format_simple(emitter_efficiency, 0)`%, sendo a potência de entrada $P_i=$ `{python} format_simple(Pi_dBm, 0)` dBm e a potência de saída $P_o=$ `{python} format_simple(Po_dBm, 0)` dBm, com a impedância de fonte igual a `{python} format_simple(z_source_real, 0)` $\Omega$ e a impedância de saída, `{python} format_simple(z_load_real, 0)` $\Omega$.

Para iniciar, converte-se as potências para a escala linear, dessa forma, $P_i=$ `{python} format(Pi)`W e $P_o=$ `{python} format(Po)`W. Como já é conhecida a carga do amplificador, pode-se calcular a tensão sobre a mesma, sendo $V_\ell=$ `{python} format(VL)`V e $I_\ell=$ `{python} format(IL)`A. A forma mais fácil de garantir que os valores apresentados sejam atingidos é adequando a corrente dc de emissor. Para isso, utiliza-se a seguinte relação

$$
    i_C(t)=I_E\left[1+\frac{2I_1(x)}{I_0(x)}\cos\left(\omega_1t\right)\right]
$$

Sendo $I_C=I_E$ e,

$$
    I_c = I_E\frac{2I_1(x)}{I_0(x)}
$$

Como já se sabe que $I_c=I_\ell$, então

$$
    I_\ell=I_E\frac{2I_1(x)}{I_0(x)}
$$

Antes de mais nada, calcula-se o valor de $x$ pela seguinte expressão

$$
    x = \frac{v_I}{V_T}
$$

em que $v_I$ é dado por 

$$
    v_I=\sqrt{2R_sP_i}
$$

```{python}
#| echo: false
from scipy.constants import Boltzmann as k, elementary_charge as q

T0=273.15
T_celsius = 26.85
T_kelvin = T_celsius + T0
VT = k * T_kelvin / q
```

```{python}
#| echo: false
import math 

Vi=math.sqrt(2*Pi*z_source_real)
x=Vi/VT
```

resultando em $v_I=$ `{python} format(Vi)`V e, consequentemente, $x=$ `{python} format_simple(x)`.

```{python}
#| echo: false

from scipy import special

I12_I0 = 2*special.iv(1, x)/special.iv(0, x)
IE = IL/I12_I0
beta = 1000
alpha = (beta+1)/beta
IC=alpha*IE
```

Com esse valor de $x$, é possível obter o valor da corrente dc de emissor, resultando em $I_E=$ `{python} format(IE)`A. Além disso, é necessário determinar a tensão necessária para alimentar o coletor do transistor e permitir que ele opere com a tensão necessária na carga. Essa tensão é dada pela seguinte equação

$$
    V_{CC} = V_\ell+V_{BE}-V_{{CE}_\text{sat}}
$$

```{python}
#| echo: false
import math 

Is = 1e-16
VBE = VT * math.log(IC / Is)
VCEsat = 0.3
VCC_ideal = VL+VBE-VCEsat
VB = 1 #Selecionada ar
```

Com a corrente $I_E$ obtida anteriormente, obtém-se uma tensão $V_{BE}=$ `{python} format(VBE)`V. Assumindo-se uma tensão $V_{{CE}_\text{sat}}=$ `{python} format_simple(VCEsat, 1)`V, obtém-se uma tensão $V_{CC}=$ `{python} format(VCC_ideal)`V. Para garantir a correta operação do amplificador, é necessário uma corrente de base maior que $V_{BE}$, dessa forma, seleciona-se uma tensão de base, $V_B=$ `{python} format(VB)`V. Com essas tensões, teoricamente obtém-se uma eficiência máxima do amplificador. Entretanto, como o problema estipula uma eficiência de $\eta=$ `{python} format_simple(emitter_efficiency, 0)`%, os parâmetros de alimentação devem ser ajustados para que essa restrição seja devidamente atendida. Primeiramente, analisa-se a equação para o cálculo da eficiência, apresentada abaixo

$$
    \eta=\frac{P_L}{P_{CC}+P_{EE}}
$$ {#eq-eff-calc}

em que $P_{CC}=V_{CC}I_C$ e $P_{EE}=V_EI_E$, sendo

$$
    V_E=V_B-V_{BE}
$$

```{python}
#| echo: false
import math 

VE = VB-VBE
PEE = VE*IE
PCC = VCC_ideal*IC
PL_calc = VL*IL/2
eff_calc = Po/(PCC+PEE)*100
```

```{python}
#| echo: false
def calcular_vcc(eta, pl=Po, pee=PEE, ic=IC):
    vcc = (pl / eta - pee) / ic
    return vcc

VCC=calcular_vcc(emitter_efficiency/100)
VCC_used=9
```

Com os dados obtidos até então, essa tensão é de $V_E=$ `{python} format(VE)`V resultando em uma potência de emissor de $P_{EE}=$ `{python} format(PEE)`W. Por outro lado, a potência de coletor é de $P_{CC}=$ `{python} format(PCC)`W. Assim, obtém-se uma eficiência $\eta=$ `{python} format_simple(eff_calc)`%. Pela [Eq. @eq-eff-calc], pode-se obter um valor de $V_{CC}$ que forneça o valor desejado para a eficiência (`{python} format_simple(emitter_efficiency, 0)`%). Resolvendo a equação, obtém-se um valor de $V_{CC}=$ `{python} format(VCC)`V. Os resultados obtidos pelos cálculos podem ser visualizados na [Fig. @fig-results-simplified], com uma pequena diferença que foi uma alteração na tensão $V_{CC}=$ `{python} format(VCC_used)`V.

![Validação do circuito com Diodo](../images/results-amplifier-simplified.png){width=300, #fig-results-simplified}

O próximo passo, então, é remover as fontes e implementar a rede de polarização do amplificador. Inicia-se por calcular o divisor resistivo da base pela seguinte equação

$$
    V_B=\frac{V_{CC}R_{B2}}{R_{B1}+R_{B2}}
$$

```{python}
#| echo: false
RB2=10e3
RB1 = (VCC_used*RB2)/VB-RB2
```

Para se obter a tensão de base desejada e selecionando um resistor $R_{B2}=$ `{python} format(RB2)`$\Omega$, chega-se a $R_{B1}=$ `{python} format(RB1)`$\Omega$.













# References {-}
