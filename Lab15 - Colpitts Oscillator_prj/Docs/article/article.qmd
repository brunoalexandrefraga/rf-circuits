---
title: Oscilador de Colpitts
subtitle: Laboratório 15
author:
  - name: Bruno Alexandre Fraga
    email: bruno.fraga@posgrad.ufsc.br
    affiliations: 
        - id: some-tech
          name: Universidade Federal de Santa Catarina
          department: Departamento de Engenharia Elétrica e Eletrônica
          address: R. Delfino Conti
          city: Florianópolis
          state: Santa Catarina
          postal-code: 88040-370
abstract: |
  Este relatório aborda o projeto e a análise de um amplificador de potência em radiofrequência (RF) operando em 400 MHz, projetado para fornecer uma potência de saída de 25 dBm a partir de um sinal de entrada de 5 dBm, com uma eficiência fixa de 60%. São explorados os aspectos teóricos que fundamentam o funcionamento de amplificadores de potência, como eficiência, distorções e estabilidade, além de uma implementação prática utilizando um modelo ideal de transistor.
keywords: 
  - Amplificador de potência
  - Distorção não-linear
  - Estabilidade
date: last-modified
bibliography: bibliography.bib
format:
  elsevier-pdf:
    include-in-header:
      - text: |
          \usepackage{steinmetz}
          \usepackage[a4paper, margin=1in]{geometry}
          \usepackage{graphicx} % Required for inserting images
          \usepackage{circuitikz}
          \usepackage{amsmath}
          \usepackage{amssymb}
          \usepackage{amsthm}
          \usepackage{comment}
          \usepackage{tikz}
          \usetikzlibrary{shapes,arrows}
          \usetikzlibrary{shapes,arrows,positioning,calc}


          \newcommand{\parallelsum}{\mathbin{\!/\mkern-5mu/\!}}
    keep-tex: true
    journal:
      name: RF Circuits
      formatting: preprint
      # model: 3p # Don't set a model with preprint
      cite-style: number
---

# Introdução

Um oscilador é um dispositivo projetado para gerar uma onda periódica sem a necessidade de um sinal de entrada. O diagrama de blocos de um oscilador básico pode ser visualizado na Fig.\ref{fig:basic-oscillator}.

```{=latex}
\begin{figure}[!htb]
\centering
\begin{tikzpicture}

% Amplifier as a triangle rotated 90 degrees clockwise
\node[draw,
    isosceles triangle,
    isosceles triangle apex angle=60,
    minimum height=1.2cm,
    minimum width=1.6cm,
    shape border rotate=0,
] (controller) {$A$};

% System H(s)
\node [draw,
	minimum width=2cm, 
	minimum height=1.2cm,
	right=1.5cm of controller
] (system) {$\beta$};

% Arrows with text label
\draw[-stealth] (controller.east) -- (system.west)node[]{};

\draw (system.east) -- ++ (1,0)node[](output){};

\draw[] (output.center) |- ++ (-7,-2.2)node[](out1){};

\draw[-stealth] (out1.center) |- (controller.west);

\end{tikzpicture}
\caption{Diagrama de um oscilador básico} 
\label{fig:basic-oscillator}
\end{figure}
```

Agora é possível alterar o diagrama da Fig.\ref{fig:basic-oscillator} para incorporar as não idealidades dos circuitos (amplificador e malha de *feedback*). Fazendo as devidas adequações e utilizando uma abordagem de um filtro LC para a carga, chega-se a topologia apresentada na Fig.\ref{fig:original-circuit-oscillator-basic}.

```{=latex}
\begin{figure}[h]
  \centering

  \begin{circuitikz}[american]
    \draw (0, 0.5) coordinate(point1) to[american controlled voltage source, l=$A_1V_1$] (0, -1.5) node[ground]{} ;
    \draw (point1) to[R, l=$R_o$, -*] (3, 0.5) coordinate(point2) to[generic, l=$Z_3$, *-] ++(0, -1.5) coordinate(point3) to[generic, l=$Z_1$] ++(0, -1.5) node[ground]{} ;
    \draw (-1, -1.5) coordinate(point4) node[ground]{} ;
    \draw (4.5, -2.5) coordinate(point5) node[ground]{} ;
    \draw (-1, 0.5) coordinate(point6) to[R, a=$R_i$, *-] (point4) ;
    \draw (point2) to[short, *-] ++(1.5, 0) to[generic, l=$Z_2$] (point5) ;
    \draw (point3) to[short] ++(-2, 0) to[short] ++(0, -2) to[short] ++(-3, 0) to[short] ++(0, 3.5) to[short, -*] (point6) ;

    \node at (point6) [above right] [above] {$V_1$};
    \node at (point2) [above right] [above] {$V_2$};
  \end{circuitikz}

  \caption{Projeto base de oscilador LC}
  \label{fig:original-circuit-oscillator-basic}
\end{figure}
```

para facilitar a análise do circuito, redesenha-se como o que é apresentado na Fig./ref{fig:original-circuit-oscillator-basic-redrawn}

```{=latex}
\begin{figure}[h]
  \centering

  
  \begin{circuitikz}
    \draw (0.5, 0.5) coordinate(point1) to[R, l=$R_o$, -*] ++(2, 0) coordinate(point2) to[generic, l=$Z_2$, *-] ++(0, -2) node[ground]{} ;
    \draw (point1) to[american controlled voltage source, l=$A_1V_1$] ++(0, -2) node[ground]{} ;
    \draw (4.5, -1.5) coordinate(point3) node[ground]{} ;
    \draw (6.5, -1.5) coordinate(point4) node[ground]{} ;
    \draw (point2) to[generic, l=$Z_3$, *-] ++(2, 0) coordinate(point5) to[generic, l=$Z_1$] (point3) ;
    \draw (point5) to[short, -*] ++(2, 0) coordinate(point6) to[R, l=$R_i$, *-] (point4) ;

    \node at (point6) [above right] [above] {$V_1$};
    \node at (point2) [above right] [above] {$V_2$};
  \end{circuitikz}



  \caption{Projeto base de oscilador LC}
  \label{fig:original-circuit-oscillator-basic-redrawn}
\end{figure}
```

Com o circuito apresentado na Fig.\ref{fig:original-circuit-oscillator-basic-redrawn}, pode-se calcular

$$
\begin{split}
  V_1=V_2\frac{Z_1\parallelsum R_i}{Z_1\parallelsum R_i+Z_3}\implies\\
  \frac{V_1}{V_2}=\frac{Z_1\parallelsum R_i}{Z_1\parallelsum R_i+Z_3}\implies\\
\end{split}
$$ {#eq-v1_V2}

Em seguida, calcula-se

$$
\begin{split}
  V_2=A_1V_1\frac{\left(Z_1\parallelsum R_i+Z_3\right)\parallelsum Z_2}{\left(Z_1\parallelsum R_i+Z_3\right)\parallelsum Z_2+R_o}\implies\\
  \frac{V_2}{A_1V_1}=\frac{\left(Z_1\parallelsum R_i+Z_3\right)\parallelsum Z_2}{\left(Z_1\parallelsum R_i+Z_3\right)\parallelsum Z_2+R_o}\implies\\
\end{split}
$$ {#eq-v2_A1V1}

Expandindo $\left(Z_1\parallelsum R_i+Z_3\right)\parallelsum Z_2$ como

$$
  \left(Z_1\parallelsum R_i+Z_3\right)\parallelsum Z_2 = \frac{\left(Z_1\parallelsum R_i+Z_3\right)Z_2}{\left(Z_1\parallelsum R_i+Z_3\right)+Z_2}
$$

E multiplicando tudo por $$, a [Eq. @eq-v2_A1V1] resulta em

$$
  \frac{V_2}{V_1}=A_1\frac{\left(Z_1\parallelsum R_i+Z_3\right)Z_2}{\left(Z_1\parallelsum R_i+Z_3\right)Z_2+R_o\left(Z_1\parallelsum R_i+Z_3+Z_2\right)}
$$ {#eq-v2_V1}

Como já se tem a [Eq. @eq-v1_V2] é possível multiplicado com a [Eq. @eq-v2_V1] e o resultado deve ser igual a 1. Antes disso, pode-se perceber que é possível simplificar $R_i$ para osciladores com BJT, uma vez que isso é uma suposição bastante razoável, pois a impedância de entrada observada na base de um transistor tende a ser bem alta. Essa abordagem pode não ser uma boa ideia caso seja utilizado um MOSFET, por exemplo. Dessa forma, a [Eq. @eq-v2_V1] resulta em

$$
\begin{split}
  \frac{V_2}{V_1}&=\frac{A_1\left(Z_1+Z_3\right)Z_2}{\left(Z_1+Z_3\right)Z_2+R_o\left(Z_1+Z_3+Z_2\right)}\implies\\
  &=\frac{A_1\left(Z_1+Z_3\right)Z_2}{\left(Z_1+Z_3\right)Z_2+R_o\left(Z_1+Z_3+Z_2\right)}\implies\\
\end{split}
$$

E a [Eq. @eq-v1_V2] fica

$$
  \frac{V_1}{V_2}=\frac{Z_1}{Z_1+Z_3}
$$

Multiplicando as duas equações obtém-se

$$
\begin{split}
  \frac{V_1}{V_2}\cdot\frac{V_2}{V_1}&=\frac{Z_1}{\left(Z_1+Z_3\right)}\cdot\frac{A_1\left(Z_1+Z_3\right)Z_2}{\left(Z_1+Z_3\right)Z_2+R_o\left(Z_1+Z_3+Z_2\right)}\implies\\
  &=\frac{A_1Z_1Z_2}{Z_2\left(Z_1+Z_3\right)+R_o\left(Z_1+Z_2+Z_3\right)}=1
\end{split}
$$

Como $Z_i=jX_i$,

$$
  \frac{-A_1X_1X_2}{jR_o\left(X_1+X_2+X_3\right)-X_2\left(X_1+X_3\right)}=1
$$

Dessa forma, obtém-se a seguinte restrição

$$
X_1+X_2+X_3=0
$$ {#eq-restriction-1}

e

$$
  \frac{A_1X_1X_2}{X_2\left(X_1+X_3\right)}=1
$$

Pela [Eq. @eq-restriction-1], $X_1+X_3=-X_2$, assim,

$$
  \frac{A_1X_1X_2}{X_2\left(-X_2\right)}=1\implies
$$

$$
  A_1=\frac{-X_2}{X_1}
$$ {#eq-restriction-2}

Com essas equações de restrição, o circuito da Fig. \ref{fig:original-circuit-oscillator-basic} é redesenhado obtendo, assim, um oscilador de Colpitts como é apresentado na Fig. \ref{fig:collpits}

```{=latex}
\begin{figure}[h]
  \centering
  
  \begin{circuitikz}[american]
    \draw (3.48, -1) node[npn](nmos1){};
    \draw (nmos1.B) to[short] ++(-1, 0) coordinate(point1) to[R, l=$R_{B2}$] ++(0, -2.5) node[ground]{} ;
    \draw (nmos1.C) to[R, l=$R_C$] ++(0, 1.73) node[vcc]{$V_{CC}$} ;
    \draw (nmos1.E) to[R, l=$R_E$] ++(0, -1.73) node[ground]{} ;
    \draw (1.6, 1) node[vcc]{$V_{CC}$} to[R, a=$R_{B1}$] (point1) to[C] ++(-2, 0) coordinate(point2) ;
    \draw (nmos1.C) to[C, -*] ++(2.02, 0) coordinate(point8) |- ++(1.5, 0) coordinate(point3) ;
    \draw (nmos1.E) to[R, l=$R_G$] ++(2.52, 0) to[C, l=$C_E$] ++(0, -1.73) node[ground]{} ;
    \draw (7, 1) coordinate(point4) |- ++(2, 0) coordinate(point5) to[L, l=$L_3$] ++(0, -2.5) coordinate(point6) to[C, l=$C_1$] ++(0, -2) node[ground]{} ;
    \draw (point4) |- (point3) ;
    \draw (11, -3.5) coordinate(point7) node[ground]{} ;
    \draw (point5) -| ++(2, 0) to[C, l=$C_2$] (point7) ;
    \draw (point6) -| ++(-1.5, 0) -| ++(0, -3) -| (point2) ;

    \node at (point8) [above right] [above] {$V_o$};
  \end{circuitikz}



  \caption{Projeto base de oscilador LC}
  \label{fig:collpits}
\end{figure}
```

De acordo com o circuito apresentado na Fig. \ref{fig:collpits}, tem-se as seguintes relações. Para o capacitor $C_1$

$$
  X_1=\frac{-1}{\omega C_1}
$$

Para o capacitor $C_2$,

$$
  X_2=\frac{-1}{\omega C_2}
$$

Dessa forma, o ganho $A_1$ é dado por

$$
\begin{split}
  A_1&=\left(-1\right)\left(\frac{-1}{\omega C_2}\right)\left(\frac{\omega C_1}{-1}\right)\implies\\
  &=\frac{-C_1}{C_2}
\end{split}
$$ {#eq-colpitts-restriction1}

Ao projetarmos efetivamente o circuito, é necessário garantir que a magnitude do ganho seja superior a $C_1/C_2$, de modo que a oscilação possa ser iniciada a partir do ruído e para que possamos superar quaisquer perdas no circuito. Seguindo com a obtenção das equações do circuito, utiliza-se a [Eq. @eq-restriction-1] para obter a frequência do oscilador

$$
  \begin{split}
    \frac{-1}{\omega C_1}-\frac{1}{\omega C_2}+\omega L_3&=0\implies\\
    -C_2-C_1+\omega^2C_1C_2L_3&=0\implies
  \end{split}
$$

$$
  \omega=\sqrt{\frac{C_1+C_2}{C_1C_2L_3}}
$$ {#eq-omega-L3}

# Projeto

```{python}
#| echo: false
import numpy as np

f = 1e6
C1 = 1e-9
C2 = 1e-9
omega = 2 * np.pi * f
L3=(C1+C2)/(C1*C2*omega**2)
``` 

```{python}
#| echo: false
def format_simple(value, decimals=2):
    format_string = f"{{:.{decimals}f}}"
    return f"{format_string.format(value)}"
```

```{python}
#| echo: false
def format(value):
    if value >= 1e9:
        return f"{value / 1e9:.2f} G"
    elif value >= 1e6:
        return f"{value / 1e6:.2f} M"
    elif value >= 1e3:
        return f"{value / 1e3:.2f} k"
    elif value >= 1:
        return f"{value:.2f} "
    elif value >= 1e-3:
        return f"{value * 1e3:.2f} m"
    elif value >= 1e-6:
        return f"{value * 1e6:.2f} u"
    elif value >= 1e-9:
        return f"{value * 1e9:.2f} n"
    elif value >= 1e-12:
        return f"{value * 1e12:.2f} p"
    elif value >= 1e-15:
        return f"{value * 1e12:.2f} p"
    else:
        return f"{value:.0e} "
```

```{python}
#| echo: false
import numpy as np

# Séries de valores comerciais (E12 e E24) para capacitores
e24_series = [1.00, 1.10, 1.20, 1.30, 1.50, 1.60, 1.80, 2.00, 2.20, 2.40, 2.70, 3.00, 3.30, 3.60, 3.90, 4.30, 4.70, 5.10, 5.60, 6.10, 6.80, 7.50, 8.20, 9.10]

# Função para aproximar o valor de um capacitor para o valor comercial mais próximo
# O parâmetro 'direction' define se o valor desejado é "acima" ou "abaixo"
def find_commercial_value(calculated_value, direction='below'):
    mult1 = 1
    if calculated_value >= 1:
        mult1 *= 1
    elif calculated_value >= 1e-3:
        mult1 *= 1e3  # mili (mF)
    elif calculated_value >= 1e-6:
        mult1 *= 1e6  # micro (µF)
    elif calculated_value >= 1e-9:
        mult1 *= 1e9  # nano (nF)
    elif calculated_value >= 1e-12:
        mult1 *= 1e12  # pico (pF)

    calculated_value *= mult1

    mult2 = 1
    # Determinar o multiplicador (1, 10 ou 100)
    if calculated_value >= 100:
        mult2 *= 100
    elif calculated_value >= 10:
        mult2 *= 10

    # Ajustar o valor calculado
    adjusted_value = calculated_value / mult2

    # Definir a função para encontrar o valor comercial dependendo da direção
    if direction == 'below':
        commercial_value = max([value for value in e24_series if value <= adjusted_value], default=None)
    elif direction == 'above':
        commercial_value = min([value for value in e24_series if value >= adjusted_value], default=None)
    
    # Ajustar o valor comercial de volta com o multiplicador
    commercial_value = commercial_value / mult1 * mult2
    
    return commercial_value

commercial_L3 = find_commercial_value(L3, 'below')
```

```{python}
#| echo: false
import math
f_real = 1/(2*math.pi)*math.sqrt((C1+C2)/(C1*C2*commercial_L3))
```

Neste projeto, deseja-se projetar um oscilador que opere na frequência $f=$ `{python} format(f)`Hz. Para facilitar a montagem do circuito, seleciona-se capacitores $C_1=$ `{python} format(C1)`F e $C_2=$ `{python} format(C2)`F. Com esses valores, aplicando à [Eq. @eq-omega-L3], obtém-se $L_3=$ `{python} format(L3)`H. Dessa forma, seleciona-se o valor de $L_3=$ `{python} format(commercial_L3)`H. Com esse valor de indutor, o circuito deve operar com uma frequência $f=$ `{python} format(f_real)`Hz.

```{python}
C_bias = 82e-9
VCC=9
RB1 = 12e3
RB2 = 8.8e3
VB = 4
RC = RE = 1e3
CE = 10e-6
RE_AC = 1e3
```

Para os capacitores de acoplamento, utilizam-se dois capacitores (um na entrada e um na saída) de `{python} format(C_bias)`F. Para manter uma o transistor devidamente polarizado, seleciona-se uma determinada tensão de base. Como a tensão de alimentação é $V_{CC}=$ `{python} format(VCC)`V, a determinada tensão de base é obtida com um divisor resistivo com $R_{B1}=$ `{python} format(RB1)`$\Omega$ e $R_{B2}=$ `{python} format(RB2)`$\Omega$. Este divisor resistivo deveria gerar uma tensão de aproximadamente $V_B\approx$ `{python} format(VB)`V na base. Além disso, sabe-se que o ganho aproximado de um transistor na configuração de emissor comum é dado pela razão entre o resistor de coletor ($R_C$) e o resistor de emissor ($R_e$). Se ambos os resistores forem escolhidos com `{python} format(RC)`$\Omega$, o circuito deve fornecer um ganho aproximado de 1. Um ganho de pelo menos 1 é necessário para que o oscilador funcione, mas, na prática, é necessário um ganho maior que 1 para superar as perdas adicionais no circuito e garantir que ele comece a oscilar a partir do ruído. Para alcançar isso, um capacitor é conectado ao emissor através de outro resistor, permitindo o controle do ganho AC e garantindo que ele exceda 1. Para este projeto, foi selecionado um capacitor de valor elevado de `{python} format(CE)`F para maximizar o ganho do transistor. Essa rede de polarização ainda carece de uma análise um pouco mais aprofundada e será realizada em momento oportuno. Outro ponto importante a comentar-se é a necessidade de garantir que o transistor atue na região ativa. Esta tarefa é realizada de uma forma bem interessante teoricamente, mas este trabalho apresenta uma abordagem prática para isso, por meio da variação do resistor de emissor (AC). Inicialmente, considera-se que esse resistor seja de um valor inicial de `{python} format(RE_AC)`$\Omega$.

# References {-}
